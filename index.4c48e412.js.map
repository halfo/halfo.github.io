{"mappings":"AAAA,MAAMA,kBAAoB,IAAIC,sBAAsBC,IAClDA,EAAMC,SAAQC,IACRA,EAAKC,gBACPD,EAAKE,OAAOC,UAAUC,IAAI,UAE9B,IAGIC,QAAU,CAAC,oBAAqB,oBAAqB,MAAO,UAAW,QAAS,WAChFP,MAAQQ,SAASC,iBAAiB,CAACF,SAASG,KAAK,OACvDV,MAAMC,SAAQU,GAAMb,kBAAkBc,QAAQD,KAE9C,MAAME,YAAc,IAAIL,SAASM,qBAAqB,YACtDD,YAAYZ,SAAQc,GAClBA,EAAQC,iBAAiB,UAAUC,GAAKF,EAAQG,MAAQL,YAAYZ,SAClEkB,GAASA,EAAMD,KAAOC,IAAUJ","sources":["js/main.js"],"sourcesContent":["const animationObserver = new IntersectionObserver((elems) => {\n  elems.forEach(elem => {\n    if (elem.isIntersecting) {\n      elem.target.classList.add('show');\n    }\n  });\n})\n\nconst classes = ['h1:not(.slogan *)', 'h3:not(.slogan *)', '.dp', '.slogan', '.card', '.slider'];\nconst elems = document.querySelectorAll([classes].join(', '));\nelems.forEach(el => animationObserver.observe(el));\n\nconst detailsList = [...document.getElementsByTagName('details')];\ndetailsList.forEach(details =>\n  details.addEventListener('toggle', _ => details.open && detailsList.forEach(\n    other => other.open = other === details,\n  ))\n);\n"],"names":["animationObserver","IntersectionObserver","elems","forEach","elem","isIntersecting","target","classList","add","classes","document","querySelectorAll","join","el","observe","detailsList","getElementsByTagName","details","addEventListener","_","open","other"],"version":3,"file":"index.4c48e412.js.map"}