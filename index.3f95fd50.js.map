{"mappings":"AAAA,MAAMA,YAAc,oBAEdC,OAASC,SAASC,uBAAuB,UAAU,GACnDC,gBAAkBH,OAAOE,uBAAuB,UAAU,GAC1DE,OAAS,IAAID,gBAAgBD,uBAAuB,UACpDG,cAAgB,IAAIL,OAAOE,uBAAuB,eAElDI,cAAgB,IAAMH,gBAAgBI,wBAAwBC,IAAM,GAEpEC,aAAgBC,GAASA,EAAKC,eAAe,CACjDC,SAAU,OACVC,MAJ0BV,gBAAgBI,wBAAwBC,IAAM,GAI/C,UAAY,SACrCM,OAAQ,YAGJC,mBAAsBC,GAAcX,cAAcY,SACtD,CAACC,EAAGC,IAAQD,EAAEE,UAAUJ,IAAcG,EAAM,MAAQ,UAAUpB,eAGhE,IAAIsB,gBAAkB,KACtBhB,cAAcY,SAAQ,CAACK,EAAQH,KAC7BG,EAAOC,iBAAiB,SAAS,WAC/B,IAAIC,KAAKJ,UAAUK,SAAS1B,aAM5B,OAJAsB,gBAAkBF,EACLf,OAAOe,GAhBYR,eAAe,CACjDC,SAAU,OACVC,MAJ0BV,gBAAgBI,wBAAwBC,IAAM,GAI/C,UAAY,SACrCM,OAAQ,YAcNC,mBAAmBI,IAEZ,CACT,OAGF,MAAMO,eAAiB,IAAIC,sBAAsBC,IAC/CA,EAAMX,SAAQP,IACZ,GAAIA,EAAKmB,eAAgB,CACvB,MAAMC,GAAOpB,EAAKqB,OAAOC,aAAa,OAEd,OAApBX,gBACFN,mBAAmBe,GACVT,kBAAoBS,IAC7BT,gBAAkB,KAEtB,IACF,GACC,CAAEY,UAAW,KAEhB7B,OAAOa,SAAQiB,GAASR,eAAeS,QAAQD","sources":["js/slider.js"],"sourcesContent":["const activeClass = 'slider-btn-active';\n\nconst slider = document.getElementsByClassName('slider')[0];\nconst slidesContainer = slider.getElementsByClassName('slides')[0];\nconst slides = [...slidesContainer.getElementsByClassName('slide')];\nconst sliderButtons = [...slider.getElementsByClassName('slider-btn')];\n\nconst isSlideInView = () => slidesContainer.getBoundingClientRect().top > 20;\n\nconst scrollToElem = (elem) => elem.scrollIntoView({\n  behavior: 'auto',\n  block: isSlideInView() ? 'nearest' : 'center',\n  inline: 'nearest',\n});\n\nconst changeActiveButton = (targetIdx) => sliderButtons.forEach(\n  (b, idx) => b.classList[targetIdx === idx ? 'add' : 'remove'](activeClass)\n);\n\nlet targetButtonIdx = null;\nsliderButtons.forEach((button, idx) => {\n  button.addEventListener('click', function () {\n    if (this.classList.contains(activeClass)) return;\n\n    targetButtonIdx = idx;\n    scrollToElem(slides[idx]);\n    changeActiveButton(idx);\n\n    return false;\n  })\n});\n\nconst sliderObserver = new IntersectionObserver((elems) => {\n  elems.forEach(elem => {\n    if (elem.isIntersecting) {\n      const key = +elem.target.getAttribute('key');\n\n      if (targetButtonIdx === null) {\n        changeActiveButton(key);\n      } else if (targetButtonIdx === key) {\n        targetButtonIdx = null;\n      }\n    }\n  });\n}, { threshold: .6 });\n\nslides.forEach(slide => sliderObserver.observe(slide));\n"],"names":["activeClass","slider","document","getElementsByClassName","slidesContainer","slides","sliderButtons","isSlideInView","getBoundingClientRect","top","scrollToElem","elem","scrollIntoView","behavior","block","inline","changeActiveButton","targetIdx","forEach","b","idx","classList","targetButtonIdx","button","addEventListener","this","contains","sliderObserver","IntersectionObserver","elems","isIntersecting","key","target","getAttribute","threshold","slide","observe"],"version":3,"file":"index.3f95fd50.js.map"}